[[questions]]
type = "Tracing"
prompt.program = """
const PI: u32 = 3;
struct Dimensions {
    radius: u32,
    height: u32,
}

fn main() {
    let mut rectDimensions = Dimensions { radius: 8, height: 5 };
    shapeVol(rectDimensions);
    shapeVol(rectDimensions);
}

fn shapeVol(rectDimensions: Dimensions) -> u32 {
    const cylinderVol = PI * rectDimensions.radius * rectDimensions.radius * rectDimensions.height;
    println!("The volume of the cylinder is is {cylinderVol}! ");
}
"""
answer.doesCompile = false
answer.lineNumber = 2
context = """
The `Copy` Trait was not implemented on the Dimensions struct which causes the code not to compile because after calling shapeVol the first time and passing rectDimensions to it, the value has been moved and is no longer avaialable for us to call the second time.
"""

[[questions]]
type = "Tracing"
prompt.program = """
#[derive(Drop)]
struct Person {
    name: felt252,
    age: u8,
}

fn main() {
    let person_1 = Person { name: "Vicra", age: 12 }
    println!("The name of the first user is {}")
}
"""
answer.doesCompile = false
answer.lineNumber = 2
context = """
`Debug` and traits were not implemented on the Person struct, which causes the code block not to compile
"""
 